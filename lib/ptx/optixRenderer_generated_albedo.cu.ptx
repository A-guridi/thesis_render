//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24817639
// Cuda compilation tools, release 10.0, V10.0.130
// Based on LLVM 3.4svn
//

.version 6.3
.target sm_30
.address_size 64

	// .globl	_Z20closest_hit_radiancev
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0
)
;
.global .align 4 .b8 texcoord[12];
.global .align 4 .b8 ray[36];
.global .align 4 .b8 prd_radiance[64];
.global .align 1 .b8 prd_shadow[1];
.global .align 4 .b8 albedo[12];
.global .align 4 .f32 uvScale;
.global .texref albedoMap;
.global .align 4 .u32 isAlbedoTexture;
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texcoordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 64, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10prd_shadowE[8] = {82, 97, 121, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6albedoE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7uvScaleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15isAlbedoTextureE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename8texcoordE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10prd_shadowE[18] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 115, 104, 97, 100, 111, 119, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6albedoE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7uvScaleE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15isAlbedoTextureE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum8texcoordE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10prd_shadowE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6albedoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7uvScaleE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15isAlbedoTextureE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic8texcoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 99, 111, 111, 114, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10prd_shadowE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6albedoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7uvScaleE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15isAlbedoTextureE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8texcoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10prd_shadowE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6albedoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7uvScaleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15isAlbedoTextureE[1];

.visible .entry _Z20closest_hit_radiancev(

)
{
	.reg .pred 	%p<56>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<28>;
	.reg .b32 	%r<90>;
	.reg .f64 	%fd<58>;
	.reg .b64 	%rd<14>;


	.loc 1 54 5
	ld.global.u32 	%r5, [isAlbedoTexture];
	setp.eq.s32	%p4, %r5, 0;
	@%p4 bra 	BB0_50;

	.loc 1 58 9
	ld.global.f32 	%f17, [uvScale];
	ld.global.f32 	%f18, [texcoord];
	mul.ftz.f32 	%f19, %f18, %f17;
	ld.global.f32 	%f20, [texcoord+4];
	mul.ftz.f32 	%f21, %f17, %f20;
	.loc 2 197 3
	tex.2d.v4.f32.f32	{%f1, %f2, %f3, %f4}, [albedoMap, {%f19, %f21}];
	.loc 1 59 9
	cvt.ftz.f64.f32	%fd36, %f1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd36;
	}
	mov.f64 	%fd37, 0d400199999999999A;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd37;
	}
	bfe.u32 	%r6, %r2, 20, 11;
	add.s32 	%r7, %r6, -1012;
	mov.u64 	%rd2, 4612136378390124954;
	shl.b64 	%rd3, %rd2, %r7;
	setp.eq.s64	%p5, %rd3, -9223372036854775808;
	abs.f64 	%fd1, %fd36;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd1;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd50, [retval0+0];
	
	//{
	}// Callseq End 0
	setp.lt.s32	%p6, %r1, 0;
	and.pred  	%p1, %p6, %p5;
	@!%p1 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_2:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd50;
	}
	xor.b32  	%r9, %r8, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r10, %temp}, %fd50;
	}
	mov.b64 	%fd50, {%r10, %r9};

BB0_3:
	setp.eq.ftz.f32	%p7, %f1, 0f00000000;
	@%p7 bra 	BB0_6;
	bra.uni 	BB0_4;

BB0_6:
	bfe.u32 	%r11, %r2, 20, 11;
	add.s32 	%r12, %r11, -1012;
	shl.b64 	%rd5, %rd2, %r12;
	setp.eq.s64	%p10, %rd5, -9223372036854775808;
	selp.b32	%r13, %r1, 0, %p10;
	mov.u32 	%r14, 0;
	or.b32  	%r15, %r13, 2146435072;
	setp.lt.s32	%p11, %r2, 0;
	selp.b32	%r16, %r15, %r13, %p11;
	mov.b64 	%fd50, {%r14, %r16};
	bra.uni 	BB0_7;

BB0_50:
	.loc 1 55 9
	ld.global.f32 	%f25, [albedo];
	ld.global.f32 	%f26, [albedo+4];
	ld.global.f32 	%f27, [albedo+8];
	bra.uni 	BB0_51;

BB0_4:
	setp.gt.s32	%p8, %r1, -1;
	@%p8 bra 	BB0_7;

	cvt.rzi.f64.f64	%fd39, %fd37;
	setp.neu.f64	%p9, %fd39, 0d400199999999999A;
	selp.f64	%fd50, 0dFFF8000000000000, %fd50, %p9;

BB0_7:
	add.f64 	%fd51, %fd36, 0d400199999999999A;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd51;
	}
	and.b32  	%r18, %r17, 2146435072;
	setp.ne.s32	%p12, %r18, 2146435072;
	@%p12 bra 	BB0_8;

	setp.gtu.f64	%p13, %fd1, 0d7FF0000000000000;
	@%p13 bra 	BB0_17;

	and.b32  	%r19, %r2, 2147483647;
	setp.ne.s32	%p14, %r19, 2146435072;
	@%p14 bra 	BB0_12;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r20, %temp}, %fd37;
	}
	setp.eq.s32	%p15, %r20, 0;
	@%p15 bra 	BB0_16;

BB0_12:
	and.b32  	%r21, %r1, 2147483647;
	setp.ne.s32	%p16, %r21, 2146435072;
	@%p16 bra 	BB0_13;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd36;
	}
	setp.ne.s32	%p17, %r22, 0;
	mov.f64 	%fd51, %fd50;
	@%p17 bra 	BB0_17;

	shr.s32 	%r23, %r2, 31;
	and.b32  	%r24, %r23, -2146435072;
	add.s32 	%r25, %r24, 2146435072;
	or.b32  	%r26, %r25, -2147483648;
	selp.b32	%r27, %r26, %r25, %p1;
	mov.u32 	%r28, 0;
	mov.b64 	%fd51, {%r28, %r27};
	bra.uni 	BB0_17;

BB0_8:
	mov.f64 	%fd51, %fd50;
	bra.uni 	BB0_17;

BB0_13:
	mov.f64 	%fd51, %fd50;
	bra.uni 	BB0_17;

BB0_16:
	setp.gt.f64	%p18, %fd1, 0d3FF0000000000000;
	selp.b32	%r29, 2146435072, 0, %p18;
	mov.u32 	%r30, 0;
	xor.b32  	%r31, %r29, 2146435072;
	setp.lt.s32	%p19, %r2, 0;
	selp.b32	%r32, %r31, %r29, %p19;
	setp.eq.ftz.f32	%p20, %f1, 0fBF800000;
	selp.b32	%r33, 1072693248, %r32, %p20;
	mov.b64 	%fd51, {%r30, %r33};

BB0_17:
	bfe.u32 	%r34, %r2, 20, 11;
	add.s32 	%r35, %r34, -1012;
	shl.b64 	%rd7, %rd2, %r35;
	setp.eq.s64	%p21, %rd7, -9223372036854775808;
	cvt.rn.ftz.f32.f64	%f22, %fd51;
	setp.eq.ftz.f32	%p22, %f1, 0f3F800000;
	selp.f32	%f25, 0f3F800000, %f22, %p22;
	.loc 1 60 9
	cvt.ftz.f64.f32	%fd12, %f2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd12;
	}
	abs.f64 	%fd13, %fd12;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd13;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd53, [retval0+0];
	
	//{
	}// Callseq End 1
	setp.lt.s32	%p23, %r3, 0;
	and.pred  	%p2, %p23, %p21;
	@!%p2 bra 	BB0_19;
	bra.uni 	BB0_18;

BB0_18:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r36}, %fd53;
	}
	xor.b32  	%r37, %r36, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r38, %temp}, %fd53;
	}
	mov.b64 	%fd53, {%r38, %r37};

BB0_19:
	setp.eq.ftz.f32	%p24, %f2, 0f00000000;
	@%p24 bra 	BB0_22;
	bra.uni 	BB0_20;

BB0_22:
	bfe.u32 	%r39, %r2, 20, 11;
	add.s32 	%r40, %r39, -1012;
	shl.b64 	%rd9, %rd2, %r40;
	setp.eq.s64	%p27, %rd9, -9223372036854775808;
	selp.b32	%r41, %r3, 0, %p27;
	mov.u32 	%r42, 0;
	or.b32  	%r43, %r41, 2146435072;
	setp.lt.s32	%p28, %r2, 0;
	selp.b32	%r44, %r43, %r41, %p28;
	mov.b64 	%fd53, {%r42, %r44};
	bra.uni 	BB0_23;

BB0_20:
	setp.gt.s32	%p25, %r3, -1;
	@%p25 bra 	BB0_23;

	cvt.rzi.f64.f64	%fd44, %fd37;
	setp.neu.f64	%p26, %fd44, 0d400199999999999A;
	selp.f64	%fd53, 0dFFF8000000000000, %fd53, %p26;

BB0_23:
	add.f64 	%fd54, %fd12, 0d400199999999999A;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd54;
	}
	and.b32  	%r46, %r45, 2146435072;
	setp.ne.s32	%p29, %r46, 2146435072;
	@%p29 bra 	BB0_24;

	setp.gtu.f64	%p30, %fd13, 0d7FF0000000000000;
	@%p30 bra 	BB0_33;

	and.b32  	%r47, %r2, 2147483647;
	setp.ne.s32	%p31, %r47, 2146435072;
	@%p31 bra 	BB0_28;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd37;
	}
	setp.eq.s32	%p32, %r48, 0;
	@%p32 bra 	BB0_32;

BB0_28:
	and.b32  	%r49, %r3, 2147483647;
	setp.ne.s32	%p33, %r49, 2146435072;
	@%p33 bra 	BB0_29;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r50, %temp}, %fd12;
	}
	setp.ne.s32	%p34, %r50, 0;
	mov.f64 	%fd54, %fd53;
	@%p34 bra 	BB0_33;

	shr.s32 	%r51, %r2, 31;
	and.b32  	%r52, %r51, -2146435072;
	add.s32 	%r53, %r52, 2146435072;
	or.b32  	%r54, %r53, -2147483648;
	selp.b32	%r55, %r54, %r53, %p2;
	mov.u32 	%r56, 0;
	mov.b64 	%fd54, {%r56, %r55};
	bra.uni 	BB0_33;

BB0_24:
	mov.f64 	%fd54, %fd53;
	bra.uni 	BB0_33;

BB0_29:
	mov.f64 	%fd54, %fd53;
	bra.uni 	BB0_33;

BB0_32:
	setp.gt.f64	%p35, %fd13, 0d3FF0000000000000;
	selp.b32	%r57, 2146435072, 0, %p35;
	mov.u32 	%r58, 0;
	xor.b32  	%r59, %r57, 2146435072;
	setp.lt.s32	%p36, %r2, 0;
	selp.b32	%r60, %r59, %r57, %p36;
	setp.eq.ftz.f32	%p37, %f2, 0fBF800000;
	selp.b32	%r61, 1072693248, %r60, %p37;
	mov.b64 	%fd54, {%r58, %r61};

BB0_33:
	bfe.u32 	%r62, %r2, 20, 11;
	add.s32 	%r63, %r62, -1012;
	shl.b64 	%rd11, %rd2, %r63;
	setp.eq.s64	%p38, %rd11, -9223372036854775808;
	cvt.rn.ftz.f32.f64	%f23, %fd54;
	setp.eq.ftz.f32	%p39, %f2, 0f3F800000;
	selp.f32	%f26, 0f3F800000, %f23, %p39;
	.loc 1 61 9
	cvt.ftz.f64.f32	%fd24, %f3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd24;
	}
	abs.f64 	%fd25, %fd24;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd25;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd56, [retval0+0];
	
	//{
	}// Callseq End 2
	setp.lt.s32	%p40, %r4, 0;
	and.pred  	%p3, %p40, %p38;
	@!%p3 bra 	BB0_35;
	bra.uni 	BB0_34;

BB0_34:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r64}, %fd56;
	}
	xor.b32  	%r65, %r64, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r66, %temp}, %fd56;
	}
	mov.b64 	%fd56, {%r66, %r65};

BB0_35:
	setp.eq.ftz.f32	%p41, %f3, 0f00000000;
	@%p41 bra 	BB0_38;
	bra.uni 	BB0_36;

BB0_38:
	bfe.u32 	%r67, %r2, 20, 11;
	add.s32 	%r68, %r67, -1012;
	shl.b64 	%rd13, %rd2, %r68;
	setp.eq.s64	%p44, %rd13, -9223372036854775808;
	selp.b32	%r69, %r4, 0, %p44;
	mov.u32 	%r70, 0;
	or.b32  	%r71, %r69, 2146435072;
	setp.lt.s32	%p45, %r2, 0;
	selp.b32	%r72, %r71, %r69, %p45;
	mov.b64 	%fd56, {%r70, %r72};
	bra.uni 	BB0_39;

BB0_36:
	setp.gt.s32	%p42, %r4, -1;
	@%p42 bra 	BB0_39;

	cvt.rzi.f64.f64	%fd47, %fd37;
	setp.neu.f64	%p43, %fd47, 0d400199999999999A;
	selp.f64	%fd56, 0dFFF8000000000000, %fd56, %p43;

BB0_39:
	add.f64 	%fd57, %fd24, 0d400199999999999A;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r73}, %fd57;
	}
	and.b32  	%r74, %r73, 2146435072;
	setp.ne.s32	%p46, %r74, 2146435072;
	@%p46 bra 	BB0_40;

	setp.gtu.f64	%p47, %fd25, 0d7FF0000000000000;
	@%p47 bra 	BB0_49;

	and.b32  	%r75, %r2, 2147483647;
	setp.ne.s32	%p48, %r75, 2146435072;
	@%p48 bra 	BB0_44;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r76, %temp}, %fd37;
	}
	setp.eq.s32	%p49, %r76, 0;
	@%p49 bra 	BB0_48;

BB0_44:
	and.b32  	%r77, %r4, 2147483647;
	setp.ne.s32	%p50, %r77, 2146435072;
	@%p50 bra 	BB0_45;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r78, %temp}, %fd24;
	}
	setp.ne.s32	%p51, %r78, 0;
	mov.f64 	%fd57, %fd56;
	@%p51 bra 	BB0_49;

	shr.s32 	%r79, %r2, 31;
	and.b32  	%r80, %r79, -2146435072;
	add.s32 	%r81, %r80, 2146435072;
	or.b32  	%r82, %r81, -2147483648;
	selp.b32	%r83, %r82, %r81, %p3;
	mov.u32 	%r84, 0;
	mov.b64 	%fd57, {%r84, %r83};
	bra.uni 	BB0_49;

BB0_40:
	mov.f64 	%fd57, %fd56;
	bra.uni 	BB0_49;

BB0_45:
	mov.f64 	%fd57, %fd56;
	bra.uni 	BB0_49;

BB0_48:
	setp.gt.f64	%p52, %fd25, 0d3FF0000000000000;
	selp.b32	%r85, 2146435072, 0, %p52;
	mov.u32 	%r86, 0;
	xor.b32  	%r87, %r85, 2146435072;
	setp.lt.s32	%p53, %r2, 0;
	selp.b32	%r88, %r87, %r85, %p53;
	setp.eq.ftz.f32	%p54, %f3, 0fBF800000;
	selp.b32	%r89, 1072693248, %r88, %p54;
	mov.b64 	%fd57, {%r86, %r89};

BB0_49:
	cvt.rn.ftz.f32.f64	%f24, %fd57;
	setp.eq.ftz.f32	%p55, %f3, 0f3F800000;
	selp.f32	%f27, 0f3F800000, %f24, %p55;

BB0_51:
	.loc 1 63 5
	st.global.f32 	[prd_radiance+24], %f25;
	st.global.f32 	[prd_radiance+28], %f26;
	st.global.f32 	[prd_radiance+32], %f27;
	mov.u16 	%rs1, 1;
	.loc 1 64 5
	st.global.u8 	[prd_radiance+8], %rs1;
	.loc 1 65 1
	ret;
}

	// .globl	_Z14any_hit_shadowv
.visible .entry _Z14any_hit_shadowv(

)
{
	.reg .b16 	%rs<2>;


	mov.u16 	%rs1, 1;
	.loc 1 70 5
	st.global.u8 	[prd_shadow], %rs1;
	.loc 4 355 5
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	.loc 1 72 1
	ret;
}

	// .globl	_ZN5optix3RayC1Ev
.visible .func _ZN5optix3RayC1Ev(
	.param .b64 _ZN5optix3RayC1Ev_param_0
)
{



	.loc 3 125 9
	ret;
}

	// .globl	_ZN5optix3RayC2Ev
.visible .func _ZN5optix3RayC2Ev(
	.param .b64 _ZN5optix3RayC2Ev_param_0
)
{



	ret;
}

.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32	%p1, %r51, 0;
	@%p1 bra 	BB4_2;

	mul.f64 	%fd13, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd13;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

BB4_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32	%p2, %r18, 1073127583;
	@%p2 bra 	BB4_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

BB4_4:
	add.f64 	%fd14, %fd135, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd15, %fd14;
	neg.f64 	%fd16, %fd14;
	mov.f64 	%fd17, 0d3FF0000000000000;
	fma.rn.f64 	%fd18, %fd16, %fd15, %fd17;
	fma.rn.f64 	%fd19, %fd18, %fd18, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd15, %fd15;
	add.f64 	%fd21, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd22, %fd21, %fd20;
	fma.rn.f64 	%fd23, %fd21, %fd20, %fd22;
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd26, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F6249249242B910;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F89999999999DFB;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	sub.f64 	%fd38, %fd21, %fd23;
	add.f64 	%fd39, %fd38, %fd38;
	neg.f64 	%fd40, %fd23;
	fma.rn.f64 	%fd41, %fd40, %fd21, %fd39;
	mul.f64 	%fd42, %fd20, %fd41;
	fma.rn.f64 	%fd43, %fd24, %fd37, 0d3FB5555555555555;
	mov.f64 	%fd44, 0d3FB5555555555555;
	sub.f64 	%fd45, %fd44, %fd43;
	fma.rn.f64 	%fd46, %fd24, %fd37, %fd45;
	add.f64 	%fd47, %fd46, 0d0000000000000000;
	add.f64 	%fd48, %fd47, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd49, %fd43, %fd48;
	sub.f64 	%fd50, %fd43, %fd49;
	add.f64 	%fd51, %fd48, %fd50;
	mul.rn.f64 	%fd52, %fd23, %fd23;
	neg.f64 	%fd53, %fd52;
	fma.rn.f64 	%fd54, %fd23, %fd23, %fd53;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd42;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd42;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd55, {%r22, %r24};
	fma.rn.f64 	%fd56, %fd23, %fd55, %fd54;
	mul.rn.f64 	%fd57, %fd52, %fd23;
	neg.f64 	%fd58, %fd57;
	fma.rn.f64 	%fd59, %fd52, %fd23, %fd58;
	fma.rn.f64 	%fd60, %fd52, %fd42, %fd59;
	fma.rn.f64 	%fd61, %fd56, %fd23, %fd60;
	mul.rn.f64 	%fd62, %fd49, %fd57;
	neg.f64 	%fd63, %fd62;
	fma.rn.f64 	%fd64, %fd49, %fd57, %fd63;
	fma.rn.f64 	%fd65, %fd49, %fd61, %fd64;
	fma.rn.f64 	%fd66, %fd51, %fd57, %fd65;
	add.f64 	%fd67, %fd62, %fd66;
	sub.f64 	%fd68, %fd62, %fd67;
	add.f64 	%fd69, %fd66, %fd68;
	add.f64 	%fd70, %fd23, %fd67;
	sub.f64 	%fd71, %fd23, %fd70;
	add.f64 	%fd72, %fd67, %fd71;
	add.f64 	%fd73, %fd69, %fd72;
	add.f64 	%fd74, %fd42, %fd73;
	add.f64 	%fd75, %fd70, %fd74;
	sub.f64 	%fd76, %fd70, %fd75;
	add.f64 	%fd77, %fd74, %fd76;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd78, {%r25, %r27};
	mov.b64 	%fd79, {%r26, %r27};
	sub.f64 	%fd80, %fd78, %fd79;
	mov.f64 	%fd81, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd82, %fd80, %fd81, %fd75;
	neg.f64 	%fd83, %fd80;
	fma.rn.f64 	%fd84, %fd83, %fd81, %fd82;
	sub.f64 	%fd85, %fd84, %fd75;
	sub.f64 	%fd86, %fd77, %fd85;
	mov.f64 	%fd87, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd88, %fd80, %fd87, %fd86;
	add.f64 	%fd89, %fd82, %fd88;
	sub.f64 	%fd90, %fd82, %fd89;
	add.f64 	%fd91, %fd88, %fd90;
	mov.f64 	%fd92, 0d400199999999999A;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd92;
	}
	add.s32 	%r29, %r28, %r28;
	setp.gt.u32	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd92;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd89, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd89, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd91, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd17;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd17;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	 %f2, %r35;
	abs.ftz.f32 	%f1, %f2;
	setp.lt.ftz.f32	%p4, %f1, 0f4086232B;
	@%p4 bra 	BB4_7;

	setp.lt.f64	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.ftz.f32	%p6, %f1, 0f40874800;
	@%p6 bra 	BB4_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r39, %r15;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

BB4_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.ne.s32	%p7, %r46, 2146435072;
	@%p7 bra 	BB4_9;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32	%p8, %r47, 0;
	@%p8 bra 	BB4_10;

BB4_9:
	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

BB4_10:
	st.param.f64	[func_retval0+0], %fd136;
	ret;
}

	.file	1 "/home/ubuntu/Documents/OptixRenderer/src/optixRenderer/src/material/albedo.cu", 1620143290, 2866
	.file	2 "/usr/local/cuda/include/texture_fetch_functions.h", 1619117407, 31897
	.file	3 "/home/ubuntu/Downloads/NVIDIA-OptiX-SDK-5.1.0-linux64/include/internal/optix_datatypes.h", 1525854403, 5083
	.file	4 "/home/ubuntu/Downloads/NVIDIA-OptiX-SDK-5.1.0-linux64/include/internal/optix_internal.h", 1525854403, 16357

